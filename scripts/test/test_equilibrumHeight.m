% file name:        test_equilibriumHeight.m
% author:           Jorge Augusto Martinez Ortiz
% date created:     07.24.2023
% description:      A script to test the equilibrium position of particles
%                   levitated inside of the sheath by the electric field

% Define constants
ELECTRON_CHARGE = -1.60e-19;
MASS_MEAN = 5.5503e-13; % Mean mass measured from particles generated by the simulation
GRAVITY = 9.81;

% Load the LUT data containing both the Cell Vertical Electric Field
% Coeffiecient as well as the Dust Charge
load('../../data/LUTData.mat')

% Retrieve sheath height measurements
Height = LUTArray{2}.SheathHeight;

% Retrieve coefficient measurements
Beta = LUTArray{2}.Beta;

% Retrieve the dust charge fit coeffiecients
coeff = LUTArray{3}.DustCharge;

% Pressure and power limits currently implemented in the simulation
minPressure     = 0.66;
maxPressure     = 1.5;
minPower        = 5;
maxPower        = 20;

% Define query points
N = 100;
pressure_query = linspace(minPressure,maxPressure,N);
power_query = linspace(minPower,maxPower,N);

PRESSURE = LUTArray{2}.Pressure;
POWER = LUTArray{2}.Power;
[PRESSURE_QUERY,POWER_QUERY] = meshgrid(pressure_query,power_query);

% As per our plots, dust charge is only a function of pressure. 
CHARGE = polyval(coeff,pressure_query) * ELECTRON_CHARGE;
CHARGE = repmat(CHARGE,N,1);

% Generate the surface for the sheath height
HEIGHT = interp2(PRESSURE,POWER,Height,PRESSURE_QUERY,POWER_QUERY);

% Generate the surface for the efield coefficient
BETA = interp2(PRESSURE,POWER,Beta,PRESSURE_QUERY,POWER_QUERY);

% Calculate electric field strength
E_FIELD = MASS_MEAN*GRAVITY./CHARGE;

% Calculate levitation height
Z = -E_FIELD./(2*BETA) + HEIGHT;

% PLOT
n = 3;
m = 2;
implot = @(A) plotImg(A,pressure_query,power_query);

subplot(n,m,1)
implot(CHARGE)
title('Dust Charge [C]')
xticks([]);
ylabel('Power [W]')

subplot(n,m,2)
implot(HEIGHT)
title('Sheath Height [m]')
xticks([]);
yticks([]);


subplot(n,m,3)
implot(E_FIELD)
title('Critical Electric Field Strength [V/m]')
xticks([]);
ylabel('Power [W]')

subplot(n,m,4)
implot(Z)
title('Levitation Height [m]')
xticks([]);
yticks([]);

subplot(n,m,5)
implot(2*BETA.*HEIGHT)
title('Maximum Electric Field Strength [V/m]')
xlabel('Presure [Pa]')
ylabel('Power [W]')

subplot(n,m,6)
implot(Z./HEIGHT)
title('Sheath Height Fraction [%]')
xlabel('Pressure [Pa]')

function plotImg(A,xVec,yVec)
    % Plot limits
    N = numel(xVec);
    xmin = min(xVec);
    xmax = max(xVec);
    ymin = min(yVec);
    ymax = max(yVec);

    % Generate tick positions
    ticksAx = floor(linspace(0,N,6));
    ticksAy = floor(linspace(0,N,6));
    ticksY = flip(string(linspace(ymin,ymax,6)))';
    ticksX = string(linspace(xmin,xmax,6))';

    % Get min an max values
    minVal = min(A,[],'all');
    maxVal = max(A,[],'all');

    % Shift & Normalize
    B = A - minVal;
    B = B/max(B,[],'all');

    % Set colorbar
    ticks = string(linspace(minVal,maxVal,6))';
    image(B * 255)
    c = colorbar;
    c.Limits = [-1 257];
    c.Ticks = 0:50:250;
    c.TickLabels = ticks;

    % Set axes ticks
    xticks(ticksAx)
    yticks(ticksAx)
    xticklabels(ticksX)
    yticklabels(ticksY)
end





